 /*khodkar c# comment   
using System;

namespace KS.Dynamic.WebService.TestWcf
{
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ISrvTestWcf")]
public interface ISrvTestWcf
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvTestWcf/DoWork", ReplyAction="http://tempuri.org/ISrvTestWcf/DoWorkResponse")]
    int DoWork(int num1, int num2);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ISrvTestWcfChannel : ISrvTestWcf, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SrvTestWcfClient : System.ServiceModel.ClientBase<ISrvTestWcf>, ISrvTestWcf
{
    
    public SrvTestWcfClient()
    {
    }
    
    public SrvTestWcfClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public SrvTestWcfClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SrvTestWcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SrvTestWcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public int DoWork(int num1, int num2)
    {
        return base.Channel.DoWork(num1, num2);
    }
}


}    khodkar c# comment*/ 